@model SignInViewModel

@{
    ViewData["Title"] = "Model.Title";
}

<section id="signin">
    <div class="container">


        <form method="post" asp-controller="Auth" asp-action="SignIn" novalidate>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    @Model.ErrorMessage
                </div>
            }


            <h1> Sign in to your Account</h1>
            <p>Don't have an account? <a asp-controller="Auth" asp-action="SignUp">Sign up here</a>. </p>

            <div class="form-content">


                <div id="form-email" class="input-group">
                    <label asp-for="Form.Email"></label>
                    <span asp-validation-for="Form.Email"> </span>
                    <input asp-for="Form.Email" />
                </div>

                <div id="form-password" class="input-group">
                    <label asp-for="Form.Password"></label>
                    <span asp-validation-for="Form.Password"> </span>
                    <input asp-for="Form.Password" />
                </div>


                <div id="rememberMe" class="checkbox">
                    <div class="checkbox-group">
                        <input asp-for="Form.RememberMe" />
                        <label asp-for="Form.RememberMe"></label>
                    </div>
                </div>

                <button id="form-submit" type="submit" class="btn-theme-s">@Model.Title</button>

                <a id="form-forgot-password" asp-controller="Account" asp-action="Forgot">Forgot your password?</a>

            </div>
        </form>

    </div>

</section>

@await Html.PartialAsync("~/Views/Shared/_ValidationScriptPartial.cshtml")  
@* <script defer src="~/js/validation.js"></script> *@